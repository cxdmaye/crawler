name: Build and Release

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: linux/amd64
            output: crawler-app
          - os: windows-latest
            target: windows/amd64
            output: crawler-app.exe
          - os: macos-latest
            target: darwin/amd64
            output: crawler-app.app

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build application
        run: |
          wails build -platform ${{ matrix.platform.target }} -clean

      - name: Package application (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: |
          mkdir -p release
          cp build/bin/crawler-app.exe release/

      - name: Package application (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mkdir -p release
          cp build/bin/crawler-app release/
          chmod +x release/crawler-app

      - name: Package application (macOS)
        if: matrix.platform.os == 'macos-latest'
        run: |
          mkdir -p release
          cp -r build/bin/crawler-app.app release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crawler-app-${{ matrix.platform.target }}
          path: release/

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            crawler-app-windows-amd64/crawler-app.exe
            crawler-app-linux-amd64/crawler-app
            crawler-app-darwin-amd64/crawler-app.app
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
